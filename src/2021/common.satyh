@require: enumitem/enumitem
% TODO: import this package breaks enumitem
% @require: base/list-ext
@require: base/fn

let intersperse s xs =
  match xs with
  | [] -> []
  | (x :: xs) ->
    x :: List.concat (xs |> List.map (fun x -> [s; x]))

let bracket-nested idx ctx =
  let idx-str = idx
    |> List.map arabic
    |> intersperse `.`
    |> List.fold-left (Fn.flip (^)) ` `
    |> embed-string
  in
  read-inline ctx {[#idx-str;]\ }

let-block +enumerate x = '<
  +enumerate?:(
    Enumitem.(change-by-depth [bracket-arabic; bracket-nested])
  )(x);
>
